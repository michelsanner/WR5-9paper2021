# POVME 2.2.1 Sample Input File

# First, we need to define a point field that entirely encompasses all trajectory pockets.
GridSpacing            1.0                                 # The distance, in Angstroms, between
                                                           # adjacent points. Making this number
                                                           # lower improves accuracy at the
                                                           # expense of compute time.

PointsInclusionSphere  65.0 98.0 50.0 16.0                 # Add a sphere of points to the pocket-
                                                           # encompassing region, centered on
                                                           # (65.0 98.0 50.0) with radius 16.0.
                                                           # (65.0 98.0 50.0) is the location of
                                                           # the enzymatic active site in the
                                                           # sample PDB trajectory file provided
                                                           # (4NSS.pdb).

PointsInclusionSphere  10.853  19.115  59.704 6.0
PointsInclusionSphere  10.091  17.895  59.212 6.0
PointsInclusionSphere  11.605  19.862  58.626 6.0
PointsInclusionSphere  10.076  20.017  60.630 6.0
PointsInclusionSphere  13.437  17.690  60.353 6.0
PointsInclusionSphere  13.048  16.248  60.524 6.0
PointsInclusionSphere  14.622  18.005  61.154 6.0
PointsInclusionSphere  12.069  18.463  60.701 6.0
PointsInclusionSphere  14.454  18.753  57.580 6.0
PointsInclusionSphere  13.686  18.469  56.304 6.0
PointsInclusionSphere  14.374  20.189  58.045 6.0
PointsInclusionSphere  13.999  17.746  58.768 6.0
PointsInclusionSphere  15.974  18.283  57.437 6.0
PointsInclusionSphere  16.690  18.559  58.640 6.0
PointsInclusionSphere  18.073  17.916  58.517 6.0
PointsInclusionSphere  18.860  18.855  57.821 6.0
PointsInclusionSphere  18.857  17.816  59.772 6.0
PointsInclusionSphere  19.943  16.977  59.448 6.0
PointsInclusionSphere  19.465  19.223  59.926 6.0
PointsInclusionSphere  20.706  19.285  60.577 6.0
PointsInclusionSphere  19.732  19.701  58.553 6.0
PointsInclusionSphere  19.629  21.190  58.334 6.0
PointsInclusionSphere  18.484  21.885  58.172 6.0
PointsInclusionSphere  18.729  23.180  58.001 6.0
PointsInclusionSphere  20.060  23.306  58.052 6.0
PointsInclusionSphere  20.838  24.498  57.927 6.0
PointsInclusionSphere  20.204  25.689  57.721 6.0
PointsInclusionSphere  22.211  24.411  58.013 6.0
PointsInclusionSphere  22.724  23.167  58.224 6.0
PointsInclusionSphere  21.997  22.042  58.350 6.0
PointsInclusionSphere  20.647  22.066  58.273 6.0


# Saving and loading the POVME points of the pocket-encompassing region.
SavePoints            true                                 # You can optionally save the point
                                                           # field to a PDB file. As you can
							   # imagine, identifying just the right set
							   # of inclusion and exclusion spheres and
							   # boxes to encompass the binding pocket
							   # is challenging. One approach is to
							   # define an initial geometry, visualize
							   # that geometry together with the protein
							   # using a program like VMD, and then
							   # iteratively add new inclusion and
							   # exclusion regions as required. The
							   # ability to save the points for
							   # visualization is helpful. Additionally,
                                                           # if your point field contains many
							   # points, generating the field may be
							   # computationally intensive. If you want
							   # to use the same field for multiple
							   # POVME runs, using a saved copy of the
							   # field rather than repeatedly generating
							   # it from scratch is more efficient. Note
							   # that POVME also saves a NPY file, which
							   # contains the same data as the PDB file
							   # but can be loaded much faster in
							   # subsequent POVME runs. The point-field
							   # PDB file is saved to
							   # {PREFIX}point_field.pdb (see
							   # OutputFilenamePrefix below).

							   # Additionally, if you specify a
							   # contiguous-pocket seed region (see
							   # ContiguousPocketSeedSphere and
							   # ContiguousPocketSeedBox below), POVME
							   # will also save those points to
							   # {PREFIX}contiguous_pocket_seed_points.pdb
							   # for visualization.

#LoadPointsFilename    points.pdb.npy                      # You can optionally load previous point
                                                           # fields if you don't want to generate
							   # them using the comamnds above. Note
							   # that you should use the .pdb.npy file,
							   # not the pdb file.

# Load the PDB trajectory file
PDBFileName                 /export/export/people/sanner/python/collab/parang/2srcNoANP.pdb
                                                           # the pocket you want to analyze.

# Tell POVME how to identify points that are within the binding pocket.
DistanceCutoff              1.09                           # Any point that comes within this
                                                           # distance of any receptor atom's van der
							   # Waals surface will not be considered
							   # part of the pocket volume. 1.09
							   # Angstroms was chosen as the default
							   # value because that is the van der Waals
							   # radius of a hydrogen atom.

ConvexHullExclusion         true                           # Calculate the convex hull of receptor
                                                           # atoms near the pocket. Remove portions
							   # of the binding pocket that fall outside
							   # this convex hull. Setting this to false
							   # will speed up the calculation but may
                                                           # lead to inaccuracies in some cases.


#ContiguousPocketSeedSphere  67.0 102.0 57.0 4.0            # It's possible your pocket-encompassing
                                                           # point field defined above might include
							   # more than one pocket in at least some
							   # of the frames of your trajectory. You
							   # can instruct POVME to remove any points
							   # that are not contiguous with a user-
							   # defined "contiguous pocket seed
							   # region." This region, which is typically
							   # just a small sphere placed in the
							   # center of your primary pocket of
							   # interest, tells POVME which pocket to
							   # measure. If no such regions are
							   # specified, POVME will calculate the
							   # total volume accross all pockets
							   # covered by your pocket-encompassing
							   # point field, even if they are not
                                                           # contiguous.

#ContiguousPocketSeedBox    50.0 50.0 50.0 10.0 10.0 10.0  # You can add additional volumes to the
                                                           # contiguous pocket seed region with
							   # additional ContiguousPocketSeedSphere
							   # and ContiguousPocketSeedBox commands,
							   # following the notation described above.

ContiguousPointsCriteria    3                              # Two pocket volumes are considered
                                                           # "contiguous" if they share at least
							   # this number neighboring points in
							   # common. Note that points that are
							   # "kitty-corner" from each other count
							   # as neighbors.

# Tell POVME how to perform the calculations.
NumProcessors               8                             # POVME can use multiple processors on
                                                           # Unix-based systems.

UseDiskNotMemory            false                          # In some cases, your PDB trajectory may
                                                           # be so large that the resulting POVME
							   # analysis cannot be easily stored in
							   # your computer's memory. If
							   # UseDiskNotMemory is set to true, POVME
							   # will rely more on your disk space than
							   # on memory/RAM.

# Tell POVME how to save the output
OutputFilenamePrefix          ./2srcNoANP_      # All the files POVME outputs will start
                                                           # with this prefix. POVME automatically
							   # creates any required directory
							   # (./POVME_test_run/ in this case).

SaveIndividualPocketVolumes   true                         # If true, POVME saves the pocket-volume
                                                           # points of each frame to a separate PDB
							   # file. The file names will be like
							   # {PREFIX}frame_X.pdb.

SavePocketVolumesTrajectory   true                         # If true, POVME saves all the pocket-
                                                           # volume points of each frame to a single
							   # PDB trajectory file. The individual
							   # frames are separated by END cards. The
							   # file name will be
							   # {PREFIX}volume_trajectory.pdb.

OutputEqualNumPointsPerFrame  true                         # Some visualization programs (e.g. VMD)
                                                           # are only compatible with trajectories
							   # that have the same number of atoms in
							   # each frame. If EqualNumAtomsPerFrame is
							   # true, POVME adds extra points at the
							   # origin (0.0, 0.0, 0.0) to satisfy this
							   # requirement. This affects files created
							   # with both SaveIndividualPocketVolumes
							   # and SavePocketVolumesTrajectory but
							   # does not alter the volume calculation
							   # itself.

SaveTabbedVolumeFile          true                         # If true, POVME saves the calculated
                                                           # volumes to a file in a simple tabular
							   # format that can be easily pasted into
							   # popular spreadsheet programs like
                                                           # Microsoft Excel. The file is named
                                                           # {PREFIX}volumes.tabbed.txt

SaveVolumetricDensityMap      true                         # If true, POVME saves a volumetric
                                                           # density map in the DX format. A
							   # volumetric density value is associated
                                                           # with each of the pocket-occupying
							   # points by calculating the fraction of
							   # all trajectory pocket volumes that
							   # include the given point. The file is
                                                           # named {PREFIX}volumetric_density.dx.

CompressOutput                true                         # If you're short on disk space, POVME
                                                           # can automatically compress all output
							   # files using gz compression.
